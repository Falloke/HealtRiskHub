generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  first_name    String
  last_name     String
  role          String          @default("user")
  brith_date    DateTime
  position      String
  province      String
  email         String          @unique
  sessions      Session[]
  // Optional for WebAuthn support
  Authenticator Authenticator[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

// Optional for WebAuthn support
model Authenticator {
  credentialID         String  @unique
  userId               String
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([userId, credentialID])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
// model influenzadata2567 {
//   disease        String? @db.VarChar(50)
//   gender         String? @db.VarChar(50)
//   age_y          Int?
//   nationality    String? @db.VarChar(50)
//   occupation     String? @db.VarChar(255)
//   province       String? @db.VarChar(50)
//   district       String? @db.VarChar(50)
//   onset_date     String? @db.VarChar(50)
//   treated_date   String? @db.VarChar(50)
//   diagnosis_date String? @db.VarChar(50)
//   death_date     String? @db.VarChar(50)

//   @@ignore
// }
